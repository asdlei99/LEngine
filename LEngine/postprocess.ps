////////////////////////////////////////////////////////////////////////////////
// Filename: postprocess.ps
////////////////////////////////////////////////////////////////////////////////

Texture2D screenTexture;
Texture2D ssaoTexture;
Texture2D bloomTexture;
SamplerState SampleType;

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex: TEXCOORD0;
};

cbuffer TextureBuffer
{
	int g_hasSSAO;
	int g_hasBloom;
	float2 g_paddingTextureBuffer;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 ColorPixelShader(PixelInputType input) : SV_TARGET
{
	float4 finalColor = screenTexture.Sample(SampleType, input.tex);

	[branch] if(g_hasSSAO)
	{
		float ao = ssaoTexture.Sample(SampleType, input.tex);
		finalColor *= ao;
	}
	[branch] if (g_hasBloom)
	{
		float4 bloom = bloomTexture.Sample(SampleType, input.tex);
		finalColor += bloom;
		//finalColor.xyz = pow(finalColor.xyz, float3(1.0f / 2.2f)); //gamma correction
	}

	return finalColor;
}